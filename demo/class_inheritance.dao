
class AA
{
	global glb;
	#global glb = 1;
	const  cst = 123;
	var    obj = 456;
	var    obj2 = 789;

	routine Meth(){ io.writeln( 'AA::Meth()' ); return 123; }
	routine Meth( a ){ io.writeln( 'AA::Meth(a)' ); return 123; }

	routine AA( i = 0 ){ io.writeln( 'AA::AA( i = 0 )' ); }

	virtual routine Virt(){ io.writeln( 'AA::Virt()' ) }
	routine CallVirt(){ Virt() }
}

class BB
{
	const  cst = 'abc';
	var    obj = 'abc';
	var    obj2 = 'abc';

	routine Meth(){ io.writeln( 'BB::Meth()' ); return 'abc'; }

	routine BB( i = 0 ){ io.writeln( 'BB::BB( i = 0 )' ); }

	routine Virt(){ io.writeln( 'BB::Virt()' ) }
}

class CC : AA, BB
{
	var    obj2 = 0$;

	use routine BB( i = 0 );
	use routine AA( i = 0 ); # this raises error, due to duplicated signature.

	routine Virt(){ io.writeln( 'CC::Virt()', self ) }
}

c = CC();

io.writeln( c.cst == 123 ? 'ok' : 'error' );
io.writeln( c.obj == 123 ? 'ok' : 'error' );
io.writeln( c.obj2 == 0$ ? 'ok' : 'error' );
io.writeln( c.Meth() == 123 ? 'ok' : 'error' );

io.writeln( c.Meth(1) );

c.CallVirt();
