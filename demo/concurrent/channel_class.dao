
const N = 100000;

class @Producer
{
	routine Run( chan : mt::channel<int> ){
		index = 0;
		while( ++index <= N ){
			if( index % 100 == 0 ) io.writeln( "sending", index )
			chan.send( index )
		}
		chan.cap(0)  # set channel buffer size to zero to close the channel;
	}
}

class @Consumer
{
	routine Run( chan : mt::channel<int> ){
		while( chan.active() ){
			index = (int) chan.receive()
			if( index % 100 == 0 ) io.writeln( "received", index );
		}
	}
}

chan = mt::channel<int>(100)

producer = Producer()
consumer = Consumer()

producer.Run( chan )
consumer.Run( chan )
