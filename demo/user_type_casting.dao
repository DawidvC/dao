
class Test
{
	var value = { 123, 456 };

	# conversion to int:
	operator cast() => int { # or simply: => int
		io.writeln( 'casting to int' );
		return value.sum();
	}
	# conversion to string:
	#routine cast( @T<string> ) => @T {
	operator cast() => string {
		io.writeln( 'casting to string' )
		return value.reduce(''){ [x, y] y += (string)x }; # convert to string
	}
	operator cast() => array<int> {
		io.writeln( 'casting to array<int>' );
		# the follwing no longer supported, should use code section methods instead:
		return (array<int>) value
	}
}

t = Test();

a = (int)t;
b = (string)t;
c = (float)t;
#d = (long)t; # error
v = (array<int>)t;

io.writeln( a, b, c, v )

e = Exception::Error( 'testing' );
io.writeln( (string)e );

# a = (int)e; # error
