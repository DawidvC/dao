
# Configurations:
DAO_CONFIG =
DAO_CONFIG += -DDAO_WITH_MACRO
DAO_CONFIG += -DDAO_WITH_REGEX
DAO_CONFIG += -DDAO_WITH_LONGINT
DAO_CONFIG += -DDAO_WITH_NUMARRAY
DAO_CONFIG += -DDAO_WITH_DYNCLASS
DAO_CONFIG += -DDAO_WITH_DECORATOR


# Turn on threading if concurrent is on:
ifeq ($(concurrent),yes)
  thread=yes
endif

# Turn off concurrent if threading is off:
ifeq ($(thread),no)
  concurrent=no
endif

# Turn off threading if nodll is on:
ifeq ($(nodll),yes)
  DAO_CONFIG += -DDAO_WITHOUT_DLL
  readline=no
  concurrent=no
  thread=no
endif

ifneq ($(thread),no)
  DAO_CONFIG += -DDAO_WITH_THREAD
endif

ifneq ($(concurrent),no)
  DAO_CONFIG += -DDAO_WITH_CONCURRENT
endif


DAO_CC      ?= gcc
DAO_CXX     ?= g++
DAO_INCS     = -I.
DAO_LIBS     = -L.
DAO_CFLAGS   = -Wall -Wno-unused
DAO_LFLAGS   =
DAO_DLLFLAGS =

DAO_LFLAGS_DAO  =
DAO_LFLAGS_DAO2 =
DAO_LFLAGS_MOD  =

DAO_DLL_EXT =

# Targets:
PROJECT ?= dao
DAO_EXE =
DAO_DLL =
DAO_ARC = libdao.a

ifeq ($(debug),yes)
  DAO_CFLAGS += -ggdb -DDEBUG
  DAO_LFLAGS += -ggdb
else
  DAO_CFLAGS += -O2
endif

ifeq ($(profile),yes)
  DAO_CFLAGS += -pg
  DAO_LFLAGS += -pg
endif

UNAME = $(shell uname)

ifeq ($(UNAME), Linux)
  UNIX = 1
  LINUX = 1
endif

ifeq ($(UNAME), Darwin)
  UNIX = 1
  MACOSX = 1
endif

ifdef LINUX
  UNIX = 1
  DAO_EXE = dao
  DAO_DLL = libdao.so
  DAO_DLL_EXT = so
  DAO_CFLAGS   += -fPIC -DUNIX
  DAO_DLLFLAGS += -shared -rdynamic -Wl,-soname,lib$(PROJECT).so
else
  ifdef MACOSX
    UNIX = 1
    DAO_EXE = dao
    DAO_DLL = libdao.dylib
    DAO_DLL_EXT = dylib
    DAO_CFLAGS   += -fPIC -DUNIX -DMAC_OSX
    DAO_DLLFLAGS += -dynamiclib -undefined dynamic_lookup -install_name lib$(PROJECT).dylib
  else
    WIN32 = 1
    DAO_EXE = dao.exe
    DAO_DLL = dao.dll
    DAO_DLL_EXT = dll
    DAO_CFLAGS   += -DWIN32
    DAO_DLLFLAGS += -shared -Wl,--out-implib,lib$(PROJECT).a
  endif
endif

ifeq ($(std),C90)
  DAO_CFLAGS += -ansi -pedantic
endif

DAO_CFLAGS += $(DAO_CONFIG)

ifdef UNIX
  DAO_DIR ?= /usr/local/dao
  DAO_BIN_DIR ?= /usr/bin
  DAO_INC_DIR = $(DAO_DIR)/include
  DAO_MOD_DIR = $(DAO_DIR)/modules
  DAO_TOOL_DIR = $(DAO_DIR)/tools

  ifdef LINUX
    DAO_LFLAGS_DAO = -Wl,-rpath=. -Wl,-rpath=$(DAO_DIR) -ldao
    DAO_LFLAGS_MOD = -Wl,-rpath=. -Wl,-rpath=$(DAO_MOD_DIR)
  endif
  ifdef MACOSX
    DAO_LFLAGS_DAO = -Wl,-rpath,. -Wl,-rpath,$(DAO_DIR) -ldao
    DAO_LFLAGS_MOD = -Wl,-rpath,. -Wl,-rpath,$(DAO_MOD_DIR)
  endif

  AR        = ar rcs
  MOVE      = mv
  COPY      = cp
  COPY_FILE = $(COPY) -f
  COPY_DIR  = $(COPY) -r
  DEL_FILE  = rm -fR
  SYMLINK   = ln -sf
  MKDIR     = mkdir -p
  HAS_DIR   = test -d
  HAS_FILE  = test -f
endif

ifdef WIN32
  DAO_DIR ?= C:\dao
  DAO_BIN_DIR ?= C:\dao
  DAO_INC_DIR = $(DAO_DIR)\include
  DAO_MOD_DIR = $(DAO_DIR)\modules
  DAO_TOOL_DIR = $(DAO_DIR)\tools

  DAO_LFLAGS_DAO  = -Wl,-rpath=. -Wl,-rpath=$(DAO_DIR) -ldao
  DAO_LFLAGS_DAO2 = -Wl,-rpath=. -Wl,-rpath=$(DAO_DIR) -ldao
  DAO_LFLAGS_MOD  = -Wl,-rpath=. -Wl,-rpath=$(DAO_MOD_DIR)

  AR        = ar rcs
  COPY      = copy /y
  DEL_FILE  = del /f/q
  DEL_DIR   = rmdir /s/q
  MKDIR     = mkdir
  MOVE      = move /y
  EXIST     = if exist
  NOTEXIST  = if not exist
  HAS_DIR   = $(EXIST)
  HAS_FILE  = $(EXIST)
endif

# for windows path:
DAO_DIR2 = $(subst \,\\,$(DAO_DIR))

DAO_CFLAGS += -DDAO_DIR=\"$(DAO_DIR2)\"
