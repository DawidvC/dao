load help;

load help_dao_type_number;
load help_dao_type_enum;
load help_dao_type_string;
load help_dao_type_array;
load help_dao_type_list;
load help_dao_type_map;
load help_dao_type_tuple;
load help_dao_type_stream;

@[name]
dao.type
@[name]

@[title]
Data Type
@[title]

@[author]
Limin Fu
@[author]

@[license]
GNU Free Documentation License
@[license]

@[text]
Dao supports optional/hybrid typing that allows variables to be declared
with or without type names. When a variable is declared without type name,
its type will be automatically inferred at compiling time if possible.
If a variable has an explicitly declared type or a successfully inferred type,
static type checking will be carried out on this variable at compiling time,
otherwise, it will be checked at running time.

The most basic inference is based on assignment,
so the simplest way to declare a variable to have certain type without explicitly
specifying it is by assigning a value of the desired type to the variable at 
the declaration, for example @[code]id = 0@[code] will decalare @[code]id@[code]
as an integer, which is equivalent to @[code]id :int = 0@[code].

@[section]Explicit Type Declaration@[section]

The type of a variable can be declared explicitly in the following form,
@[code]
variable : type
variable : type = value
@[code]
The same form can also be used in function parameter list.

Dao has the following basic types:
@[list]
--@[green]int@[green] : integer type;
--@[green]float@[green] : single precision floating point number;
--@[green]double@[green] : double precision floating point number;
--@[green]complex@[green] : complex number (double precision for each part);
--@[green]long@[green]   : arbitrary precision integer;
--@[green]string@[green] : string type;
--@[green]enum@[green] : enum type;
@[list]
The following is a list of builtin aggregated types in Dao:
@[list]
--@[green]array@[green] : multi-dimensional numeric array;
--@[green]tuple@[green] : tuple type;
--@[green]list@[green] : list container;
--@[green]map@[green] : map or hash map container;
@[list]

@[text]
