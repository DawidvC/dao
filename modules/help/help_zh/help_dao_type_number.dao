load help;

@[name]
dao.type.int
@[name]

@[title]
整数类型
@[title]

@[text]

整型@[code]int@[code]是一表示整数的基本数据类型。
缺省情况下，道整型的宽度（字节数）跟系统的指针的宽度一样，
也就是，在32位系统上为4字节，64位系统上为8字节。


@[subsection]定义@[subsection]
@[code(syntax)]
DecDigit ::= '0' ... '9'
HexDigit ::= DecDigit | 'a' ... 'f' | 'A' ... 'F'

DecInteger ::= DecDigit +
HexInteger ::= ('0x' | '0X') HexDigit +
Integer    ::= DecInteger | HexInteger
@[code(syntax)]

@[subsection]例子@[subsection]
@[code]
A = 123
B = 0x123a
C: int = 789
@[code]
@[text]




@[name]
dao.type.float
@[name]

@[title]
单精度浮点数类型
@[title]

@[text]

道语言里单精度浮点数类型由@[code]float@[code]表示。


@[subsection]定义@[subsection]
@[code(syntax)]
DotDec ::= DecDigit * '.' DecDigit +
DecDot ::= DecDigit + '.' DecDigit *
DecNumber ::= DotDec | DecDot
DecNumber ::= DecInteger | DecNumber
SciNumber ::= DecNumber ( 'e' | 'E' ) [ '+' | '-' ] DecInteger

Float  ::= ( DecInteger | DecNumber | SciNumber ) 'F'
@[code(syntax)]
这里@[code]DecInteger@[code]在@[node]dao.type.int@[node]里有定义。


@[subsection]例子@[subsection]
@[code]
A = .12F
B = 12.F
C = 12.5F
D = 2e-3
E = 2e-3F
@[code]
@[text]



@[name]
dao.type.double
@[name]

@[title]
双精度浮点数类型
@[title]

@[text]

道语言里双精度浮点数类型由@[code]double@[code]表示。


@[subsection]定义@[subsection]
@[code(syntax)]
Double ::= ( DecInteger | DecNumber | SciNumber ) [ 'D' ]
@[code(syntax)]
这里@[code]DecInteger@[code]在@[node]dao.type.int@[node]里有定义，
@[code]DecNumber@[code]和@[code]DecSinglePrecision@[code]
在@[node]dao.type.float@[node]里有定义。


@[subsection]例子@[subsection]
@[code]
A = .12
A = .12D
B = 12.
B = 12.D
C = 12.5
C = 12.5D
D = 123D
E = 2E-3
E = 2E-3D
@[code]
@[text]


@[name]
dao.type.complex
@[name]

@[title]
复数类型
@[title]

@[text]

道语言还支持复数类型@[code]complex@[code]。
复数的实部和虚部都为双精度浮点数。


@[subsection]定义@[subsection]
@[code(syntax)]
Complex ::= ( DecInteger | DecNumber | SciNumber ) 'C'
@[code(syntax)]

这样声明的复数仅设定了其虚部，实部都为零。
要实现一般的复数，可用算术运算获得。
复数的实部和虚部可由成员@[code]real@[code]和@[code]imag@[code]访问。


@[subsection]例子@[subsection]
@[code]
A = 1C
B = 123C
C = 12.3C
R = C.real;
I = C.imag;
@[code]
@[text]


