load help;

@[name]
dao.type.list
@[name]

@[title]
List Container Type
@[title]

@[text]
In Dao, @[green]list@[green] is supported as a generic container type
which can contain any data type. Internally it is implemented as a dynamic array.


@[subsection]Definition@[subsection]
@[code(syntax)]
ListEnumeration ::= [ 'list' ] '{' ExpressionList '}'

# Items of Arithmetic Progression sequence: count ~ start [ ~ step ]
ListByArithProg ::= [ 'list' ] '{' Expression ':' [ Expression ':' ] Expression '}'

List ::= ListEnumeration | ListByArithProg
@[code(syntax)]
When a list is created by enumeration without explicit type declaration, 
its type is inferred from the first expression of the expression list, 
if the enumeration is not empty; otherwise, @[green]list<any>@[green] 
will be used as its type.


@[subsection]Examples@[subsection]
@[code]
list1 = { 1, 2, 3 }    # list<int>
list2 = { 1.0, 2, 3 }  # list<float>
list3 = { 1 : 5 }      # list<int>
list4 = list{ 1 : 2 : 5 }  # list<int>
@[code]

@[text]


@[name]
dao.type.list.init
@[name]

@[name]
dao.type.list.method
@[name]
