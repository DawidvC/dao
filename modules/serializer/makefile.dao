
project = DaoMake::Project( "DaoSerializer" ) 

daovm = DaoMake::FindPackage( "Dao", $REQUIRED )

if( daovm == none ) return

project.UseImportLibrary( daovm, "dao" )

project_objs = project.AddObjects( { "dao_serializer.c" }, { "dao_serializer.h" } )
project_dll  = project.AddSharedLibrary( "dao_serializer", project_objs )
project_lib  = project.AddStaticLibrary( "dao_serializer", project_objs )


findpkg = DaoMake::MakePath( project.BinaryPath(), "FindDaoSerializer.dao" );
project.GenerateFinder( $TRUE );
project.Install( daovm.GetPath( "MOD-PATH" ), project_dll );
project.Install( daovm.GetPath( "MOD-PATH" ), project_lib );
project.Install( daovm.GetPath( "INSTALL-PATH" ) + "/shared/daomake/packages/", findpkg );

daovm_doc_path = daovm.GetPath( "DOC-PATH" );
demos = { "example.dao" }
project.Install( DaoMake::MakePath( daovm_doc_path, "./demo/modules/serializer" ), demos )
