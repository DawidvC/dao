
####### Installation directory
DAO_DIR = C:\dao
DAO_LIB_DIR = $(DAO_DIR)\lib
DAO_INC_DIR = $(DAO_DIR)\include
DAO_TOOL_DIR = $(DAO_DIR)\tools

DAO_MACRO = -DDAO_WITH_MACRO
DAO_NUMARRAY = -DDAO_WITH_NUMARRAY
DAO_THREAD = -DDAO_WITH_THREAD
DAO_ASYNCLASS = -DDAO_WITH_ASYNCLASS
DAO_DYNCLASS = -DDAO_WITH_DYNCLASS
DAO_DECORATOR = -DDAO_WITH_DECORATOR
DAO_SERIALIZ = -DDAO_WITH_SERIALIZATION

DAO_CONFIG = $(DAO_MACRO) $(DAO_THREAD) $(DAO_NUMARRAY) $(DAO_SERIALIZ) $(DAO_ASYNCLASS) $(DAO_DYNCLASS) $(DAO_DECORATOR) $(USE_READLINE)

CC        = gcc
CFLAGS    = -Wall -O2 -DWIN32 $(DAO_CONFIG)
INCPATH   = -I. -Ikernel
LFLAGS    = -s
LFLAGSDLL = -s -shared
#LFLAGSDLL = -shared -fPIC -s -Wl,--version-script=daolibsym.map

# gcc 3.4.x needs -lmsvcp60
#LIBS = -L. -lwinmm -lmsvcp60
LIBS = -L. -lwinmm

AR = ar rcs
COPY      = copy /y
DEL_FILE  = del /f/q
DEL_DIR   = rmdir /s/q
MKDIR     = mkdir
MOVE      = move /y
EXIST     = if exist
NOTEXIST  = if not exist

####### Output directory

OBJECTS_DIR = objs

####### Files

SOURCES = kernel/daoType.c \
		kernel/daoStdtype.c \
		kernel/daoNamespace.c \
		kernel/daoGC.c \
		kernel/daoNumtype.c \
		kernel/daoMaindl.c \
		kernel/daoClass.c \
		kernel/daoLexer.c \
		kernel/daoParser.c \
		kernel/daoMacro.c \
		kernel/daoRegex.c \
		kernel/daoContext.c \
		kernel/daoProcess.c \
		kernel/daoValue.c \
		kernel/daoStdlib.c \
		kernel/daoArray.c \
		kernel/daoMap.c \
		kernel/daoConst.c \
		kernel/daoRoutine.c \
		kernel/daoObject.c \
		kernel/daoThread.c \
		kernel/daoSched.c \
		kernel/daoStream.c \
		kernel/daoString.c \
		kernel/daoVmcode.c \
		kernel/daoVmspace.c
OBJECTS = objs/daoType.o \
		objs/daoStdtype.o \
		objs/daoValue.o \
		objs/daoContext.o \
		objs/daoProcess.o \
		objs/daoNamespace.o \
		objs/daoGC.o \
		objs/daoRoutine.o \
		objs/daoStdlib.o \
		objs/daoVmcode.o \
		objs/daoVmspace.o \
		objs/daoLexer.o \
		objs/daoParser.o \
		objs/daoMacro.o \
		objs/daoThread.o \
		objs/daoNumtype.o \
		objs/daoClass.o \
		objs/daoArray.o \
		objs/daoMap.o \
		objs/daoConst.o \
		objs/daoObject.o \
		objs/daoSched.o \
		objs/daoStream.o \
		objs/daoString.o \
		objs/daoRegex.o 

# dynamic linked Dao interpreter, requires dao.so to run:
TARGET   = dao.exe

# Dao dynamic linking library
TARGETDLL	= dao.dll

ARCHIVE = dao.a

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGETDLL) $(TARGET) $(ARCHIVE)

$(TARGET):  objs/daoMaindl.o
	$(CC) $(LFLAGS) -o $(TARGET) objs/daoMaindl.o $(LIBS) $(LIB_READLINE) -ldao
	
static:  $(OBJECTS) objs/daoMain.o
	$(CC) $(LFLAGS) -o $(TARGET) objs/daoMain.o $(OBJECTS) $(LIBS)
	
$(TARGETDLL):  $(OBJECTS)
	$(CC) $(LFLAGSDLL) -o $(TARGETDLL) $(OBJECTS) $(LIBS)

$(ARCHIVE):  $(OBJECTS)
	$(AR) $(ARCHIVE) $(OBJECTS)

clean:
	-$(DEL_FILE) objs\*
	-$(DEL_FILE) core *.core

FORCE:

####### Compile

#main
objs/daoMaindl.o: kernel/daoMaindl.c 
	$(CC) -c $(CFLAGS) $(INCPATH) -o objs/daoMaindl.o kernel/daoMaindl.c
	
objs/daoMain.o: kernel/daoMain.c 
	$(CC) -c $(CFLAGS) $(INCPATH) -o objs/daoMain.o kernel/daoMain.c

#dll
objs/daoType.o: kernel/daoType.c kernel/daoType.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o objs/daoType.o kernel/daoType.c

objs/daoStdtype.o: kernel/daoStdtype.c kernel/daoStdtype.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o objs/daoStdtype.o kernel/daoStdtype.c

objs/daoNamespace.o: kernel/daoNamespace.c kernel/daoNamespace.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o objs/daoNamespace.o kernel/daoNamespace.c

objs/daoNumtype.o: kernel/daoNumtype.c kernel/daoNumtype.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o objs/daoNumtype.o kernel/daoNumtype.c

objs/daoClass.o: kernel/daoClass.c kernel/daoClass.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o objs/daoClass.o kernel/daoClass.c

objs/daoRegex.o: kernel/daoRegex.c kernel/daoRegex.h 
	$(CC) -c $(CFLAGS) $(INCPATH) -o objs/daoRegex.o kernel/daoRegex.c

objs/daoContext.o: kernel/daoContext.c kernel/daoType.h kernel/daoContext.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o objs/daoContext.o kernel/daoContext.c

objs/daoProcess.o: kernel/daoProcess.c kernel/daoType.h kernel/daoProcess.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o objs/daoProcess.o kernel/daoProcess.c

objs/daoArray.o: kernel/daoArray.c kernel/daoArray.h 
	$(CC) -c $(CFLAGS) $(INCPATH) -o objs/daoArray.o kernel/daoArray.c

objs/daoMap.o: kernel/daoMap.c kernel/daoMap.h 
	$(CC) -c $(CFLAGS) $(INCPATH) -o objs/daoMap.o kernel/daoMap.c
	
objs/daoConst.o: kernel/daoConst.c
	$(CC) -c $(CFLAGS) $(INCPATH) -o objs/daoConst.o kernel/daoConst.c
	
objs/daoRoutine.o: kernel/daoRoutine.c kernel/daoRoutine.h 
	$(CC) -c $(CFLAGS) $(INCPATH) -o objs/daoRoutine.o kernel/daoRoutine.c

objs/daoObject.o: kernel/daoObject.c kernel/daoObject.h 
	$(CC) -c $(CFLAGS) $(INCPATH) -o objs/daoObject.o kernel/daoObject.c

objs/daoSched.o: kernel/daoSched.c kernel/daoSched.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o objs/daoSched.o kernel/daoSched.c

objs/daoStream.o: kernel/daoStream.c kernel/daoStream.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o objs/daoStream.o kernel/daoStream.c

objs/daoString.o: kernel/daoString.c kernel/daoString.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o objs/daoString.o kernel/daoString.c

objs/daoVmcode.o: kernel/daoVmcode.c kernel/daoVmcode.h 
	$(CC) -c $(CFLAGS) $(INCPATH) -o objs/daoVmcode.o kernel/daoVmcode.c

objs/daoVmspace.o: kernel/daoVmspace.c kernel/daoVmspace.h 
	$(CC) -c $(CFLAGS) $(INCPATH) -o objs/daoVmspace.o kernel/daoVmspace.c

objs/daoGC.o: kernel/daoGC.c kernel/daoGC.h 
	$(CC) -c $(CFLAGS) $(INCPATH) -o objs/daoGC.o kernel/daoGC.c

objs/daoStdlib.o: kernel/daoStdlib.c kernel/daoStdlib.h 
	$(CC) -c $(CFLAGS) $(INCPATH) -o objs/daoStdlib.o kernel/daoStdlib.c

objs/daoMacro.o: kernel/daoMacro.c kernel/daoMacro.h 
	$(CC) -c $(CFLAGS) $(INCPATH) -o objs/daoMacro.o kernel/daoMacro.c

objs/daoLexer.o: kernel/daoLexer.c kernel/daoLexer.h 
	$(CC) -c $(CFLAGS) $(INCPATH) -o objs/daoLexer.o kernel/daoLexer.c

objs/daoParser.o: kernel/daoParser.c kernel/daoParser.h 
	$(CC) -c $(CFLAGS) $(INCPATH) -o objs/daoParser.o kernel/daoParser.c

objs/daoThread.o: kernel/daoThread.c kernel/daoThread.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o objs/daoThread.o kernel/daoThread.c

objs/daoValue.o: kernel/daoValue.c kernel/daoValue.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o objs/daoValue.o kernel/daoValue.c

####### Install

install:  
	$(NOTEXIST) $(DAO_DIR) $(MKDIR) $(DAO_DIR)
	$(NOTEXIST) $(DAO_LIB_DIR) $(MKDIR) $(DAO_LIB_DIR)
	$(NOTEXIST) $(DAO_INC_DIR) $(MKDIR) $(DAO_INC_DIR)
	$(NOTEXIST) $(DAO_TOOL_DIR) $(MKDIR) $(DAO_TOOL_DIR)

	$(EXIST) dao.conf $(COPY) dao.conf $(DAO_DIR)
	$(EXIST) addpath.dao $(COPY) addpath.dao $(DAO_DIR)
	$(EXIST) tools\autobind.dao $(COPY) tools\autobind.dao $(DAO_TOOL_DIR)

	$(COPY) kernel\*.h $(DAO_INC_DIR)
	$(COPY) kernel\dao.h $(DAO_DIR)
	$(COPY) kernel\daolib.h $(DAO_DIR)
	$(COPY) $(TARGET) $(DAO_DIR)
	$(COPY) $(TARGETDLL) $(DAO_DIR)

uninstall:
	$(EXIST) $(DAO_DIR)  $(DEL_DIR) $(DAO_DIR)
