
####### Installation directory
DAO_DIR = C:\dao
DAO_LIB_DIR = $(DAO_DIR)\lib
DAO_INC_DIR = $(DAO_DIR)\include
DAO_TOOL_DIR = $(DAO_DIR)\tools

DAO_MACRO = -DDAO_WITH_MACRO
DAO_THREAD = -DDAO_WITH_THREAD
DAO_NUMARRAY = -DDAO_WITH_NUMARRAY
DAO_ASYNCLASS = -DDAO_WITH_ASYNCLASS
DAO_DYNCLASS = -DDAO_WITH_DYNCLASS
DAO_DECORATOR = -DDAO_WITH_DECORATOR
DAO_SERIALIZ = -DDAO_WITH_SERIALIZATION

#USE_READLINE = -DDAO_USE_READLINE
#LIB_READLINE = -lreadline -lncurses

DAO_CONFIG = $(DAO_MACRO) $(DAO_THREAD) $(DAO_NUMARRAY) $(DAO_SERIALIZ) $(DAO_ASYNCLASS) $(DAO_DYNCLASS) $(DAO_DECORATOR)

CC       ?= gcc
CFLAGS    = -Wall -Wno-unused -fPIC -DWIN32 $(DAO_CONFIG)
INCPATH   = -I. -Ikernel
LFLAGS    =
LFLAGSDLL = -shared -Wl,--out-implib,libdao.a
LIBS      = -L. -ldl -lpthread -lm $(LIB_READLINE)

# dynamic linked Dao interpreter, requires dao.so to run:
DAO_EXE   = dao.exe

# Dao dynamic linking library
DAO_DLL	= dao.dll

ARCHIVE = dao.a

CHANGESET_ID = $(shell hg id -i)

ifneq ($(CHANGESET_ID),)
  CFLAGS += -DCHANGESET_ID=\"HG.$(CHANGESET_ID)\"
endif

ifeq ($(debug),yes)
  CFLAGS += -ggdb -DDEBUG
  LFLAGS += -ggdb
else
  CFLAGS += -O2
  LFLAGS += -s
  LFLAGSDLL += -s
endif

ifeq ($(std),C90)
  CFLAGS += -ansi -pedantic
endif

# gcc 3.4.x needs -lmsvcp60
#LIBS = -L. -lwinmm -lmsvcp60
LIBS = -L. -lwinmm

AR = ar rcs
COPY      = copy /y
DEL_FILE  = del /f/q
DEL_DIR   = rmdir /s/q
MKDIR     = mkdir
MOVE      = move /y
EXIST     = if exist
NOTEXIST  = if not exist

####### Output directory

OBJECTS = kernel\daoArray.o \
		  kernel\daoMap.o \
		  kernel\daoType.o \
		  kernel\daoValue.o \
		  kernel\daoContext.o \
		  kernel\daoProcess.o \
		  kernel\daoRoutine.o \
		  kernel\daoGC.o \
		  kernel\daoStdtype.o \
		  kernel\daoNamespace.o \
		  kernel\daoString.o \
		  kernel\daoStdlib.o \
		  kernel\daoMacro.o \
		  kernel\daoLexer.o \
		  kernel\daoParser.o \
		  kernel\daoThread.o \
		  kernel\daoNumtype.o \
		  kernel\daoClass.o \
		  kernel\daoConst.o \
		  kernel\daoObject.o \
		  kernel\daoSched.o \
		  kernel\daoStream.o \
		  kernel\daoVmcode.o \
		  kernel\daoVmspace.o \
		  kernel\daoRegex.o

first: all

####### Implicit rules

.SUFFIXES: .c

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

kernel\daoMaindl.o: kernel\daoMaindl.c
	$(CC) -c $(CFLAGS) $(USE_READLINE) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(DAO_DLL) $(DAO_EXE) $(ARCHIVE)

static:  $(OBJECTS) kernel\daoMain.o
	$(CC) $(LFLAGS) -o dao $(OBJECTS) kernel\daoMain.o $(LIBS)

one:  $(OBJECTS) kernel\daoMainv.o
	$(CC) $(LFLAGS) -o daov $(OBJECTS) kernel\daoMainv.o $(LIBS)

$(DAO_EXE):  kernel\daoMaindl.o
	$(CC) $(LFLAGS) $(LIB_READLINE) -o $(DAO_EXE) kernel\daoMaindl.o $(LIBS) -ldao

$(DAO_DLL):  $(OBJECTS)
	$(CC) $(LFLAGSDLL) -o $(DAO_DLL) $(OBJECTS) $(LIBS)

$(ARCHIVE):  $(OBJECTS)
	$(AR) $(ARCHIVE) $(OBJECTS)

clean:
	-$(DEL_FILE) kernel\*.o dao.a
	-$(DEL_FILE) *~ core *.core

FORCE:

####### Install

install:  
	$(NOTEXIST) $(DAO_DIR) $(MKDIR) $(DAO_DIR)
	$(NOTEXIST) $(DAO_LIB_DIR) $(MKDIR) $(DAO_LIB_DIR)
	$(NOTEXIST) $(DAO_INC_DIR) $(MKDIR) $(DAO_INC_DIR)
	$(NOTEXIST) $(DAO_TOOL_DIR) $(MKDIR) $(DAO_TOOL_DIR)

	$(EXIST) dao.conf $(COPY) dao.conf $(DAO_DIR)
	$(EXIST) addpath.dao $(COPY) addpath.dao $(DAO_DIR)
	$(EXIST) tools\autobind.dao $(COPY) tools\autobind.dao $(DAO_TOOL_DIR)

	$(COPY) kernel\*.h $(DAO_INC_DIR)
	$(COPY) kernel\dao.h $(DAO_DIR)
	$(COPY) kernel\daolib.h $(DAO_DIR)
	$(COPY) $(TARGET) $(DAO_DIR)
	$(COPY) $(TARGETDLL) $(DAO_DIR)

uninstall:
	$(EXIST) $(DAO_DIR)  $(DEL_DIR) $(DAO_DIR)
